/*
 * This file is generated by jOOQ.
*/
package au.com.coffeesaints.db.generated.tables.records;


import au.com.coffeesaints.db.generated.tables.Saint;

import java.sql.Time;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SaintRecord extends UpdatableRecordImpl<SaintRecord> implements Record6<Integer, String, Integer, Integer, Time, Time> {

    private static final long serialVersionUID = -25629147;

    /**
     * Setter for <code>public.saint.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.saint.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.saint.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.saint.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.saint.coffee_bought</code>.
     */
    public void setCoffeeBought(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.saint.coffee_bought</code>.
     */
    public Integer getCoffeeBought() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.saint.coffee_consumed</code>.
     */
    public void setCoffeeConsumed(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.saint.coffee_consumed</code>.
     */
    public Integer getCoffeeConsumed() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.saint.created</code>.
     */
    public void setCreated(Time value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.saint.created</code>.
     */
    public Time getCreated() {
        return (Time) get(4);
    }

    /**
     * Setter for <code>public.saint.modified</code>.
     */
    public void setModified(Time value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.saint.modified</code>.
     */
    public Time getModified() {
        return (Time) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, String, Integer, Integer, Time, Time> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, String, Integer, Integer, Time, Time> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Saint.SAINT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Saint.SAINT.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Saint.SAINT.COFFEE_BOUGHT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Saint.SAINT.COFFEE_CONSUMED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Time> field5() {
        return Saint.SAINT.CREATED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Time> field6() {
        return Saint.SAINT.MODIFIED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getCoffeeBought();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getCoffeeConsumed();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Time value5() {
        return getCreated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Time value6() {
        return getModified();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SaintRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SaintRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SaintRecord value3(Integer value) {
        setCoffeeBought(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SaintRecord value4(Integer value) {
        setCoffeeConsumed(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SaintRecord value5(Time value) {
        setCreated(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SaintRecord value6(Time value) {
        setModified(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SaintRecord values(Integer value1, String value2, Integer value3, Integer value4, Time value5, Time value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SaintRecord
     */
    public SaintRecord() {
        super(Saint.SAINT);
    }

    /**
     * Create a detached, initialised SaintRecord
     */
    public SaintRecord(Integer id, String name, Integer coffeeBought, Integer coffeeConsumed, Time created, Time modified) {
        super(Saint.SAINT);

        set(0, id);
        set(1, name);
        set(2, coffeeBought);
        set(3, coffeeConsumed);
        set(4, created);
        set(5, modified);
    }
}
